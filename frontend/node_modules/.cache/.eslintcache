[{"/Users/siri.milk/se-64-reservation/frontend/src/index.tsx":"1","/Users/siri.milk/se-64-reservation/frontend/src/reportWebVitals.ts":"2","/Users/siri.milk/se-64-reservation/frontend/src/App.tsx":"3","/Users/siri.milk/se-64-reservation/frontend/src/components/Navbar.tsx":"4","/Users/siri.milk/se-64-reservation/frontend/src/components/ReservationCreate.tsx":"5","/Users/siri.milk/se-64-reservation/frontend/src/components/Reservation.tsx":"6","/Users/siri.milk/se-64-reservation/frontend/src/components/Home.tsx":"7","/Users/siri.milk/se-64-reservation/frontend/src/components/Signin.tsx":"8"},{"size":500,"mtime":1642227783900,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1642227783901,"results":"11","hashOfConfig":"10"},{"size":6717,"mtime":1642254439188,"results":"12","hashOfConfig":"10"},{"size":1183,"mtime":1642228493802,"results":"13","hashOfConfig":"10"},{"size":12962,"mtime":1642962455674,"results":"14","hashOfConfig":"10"},{"size":5028,"mtime":1642579525147,"results":"15","hashOfConfig":"10"},{"size":2295,"mtime":1642246314939,"results":"16","hashOfConfig":"10"},{"size":4922,"mtime":1642246577786,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"b1uiou",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/siri.milk/se-64-reservation/frontend/src/index.tsx",[],["36","37"],"/Users/siri.milk/se-64-reservation/frontend/src/reportWebVitals.ts",[],"/Users/siri.milk/se-64-reservation/frontend/src/App.tsx",[],"/Users/siri.milk/se-64-reservation/frontend/src/components/Navbar.tsx",[],"/Users/siri.milk/se-64-reservation/frontend/src/components/ReservationCreate.tsx",["38","39","40","41","42","43","44","45","46"],"/Users/siri.milk/se-64-reservation/frontend/src/components/Reservation.tsx",["47"],"import { useEffect, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { ReservationInterface } from \"../models/IReservation\";\nimport { format } from 'date-fns'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(2),\n    },\n    table: {\n      minWidth: 650,\n    },\n    tableSpace: {\n      marginTop: 20,\n    },\n  })\n);\n\nfunction Reservation() {\n  const classes = useStyles();\n  const [Reservation, setReservations] = useState<ReservationInterface[]>([]); // ใช้ Array []\n  const apiUrl = \"http://localhost:8080\";\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const getReservations = async () => {\n    fetch(`${apiUrl}/reservations`, requestOptions)\n      .then((response) => response.json())\n      .then((res) => {\n        console.log(res.data);\n        if (res.data) {\n            setReservations(res.data);\n        } else {\n          console.log(\"else\");\n        }\n      });\n  };\n\n  useEffect(() => {\n    getReservations();\n  }, []);\n\n  return (\n    <div>\n      <Container className={classes.container} maxWidth=\"md\">\n        <Box display=\"flex\">\n          <Box flexGrow={1}>\n            <Typography\n              component=\"h2\"\n              variant=\"h6\"\n              color=\"primary\"\n              gutterBottom\n            >\n              ข้อมูลการจองห้องพัก\n            </Typography>\n          </Box>\n          <Box>\n            <Button\n              component={RouterLink}\n              to=\"/reservation/create\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              เริ่มต้น\n            </Button>\n          </Box>\n        </Box>\n\n        <TableContainer component={Paper} className={classes.tableSpace}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" width=\"10%\">\n                  ลำดับ\n                </TableCell>\n                <TableCell align=\"center\" width=\"40%\">\n                  ชื่อสมาชิกผู้ใช้งานระบบ\n                </TableCell>\n                <TableCell align=\"center\" width=\"10%\">\n                  วันที่ต้องการ Check-in\n                </TableCell>\n                <TableCell align=\"center\" width=\"10%\">\n                  วันที่ต้องการ Check-out\n                </TableCell>\n                <TableCell align=\"center\" width=\"10%\">\n                  หมายเลขห้องพัก\n                </TableCell>\n                <TableCell align=\"center\" width=\"10%\">\n                  จำนวนคนที่ต้องการเข้าพัก\n                </TableCell>\n                <TableCell align=\"center\" width=\"20%\">\n                  ช่องทางการชำระเงิน\n                </TableCell>\n                <TableCell align=\"center\" width=\"10%\">\n                  เบอร์โทรศัพท์\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Reservation.map((item: ReservationInterface) => (\n                // ลำดับ\n                <TableRow key={item.ID}> \n                  <TableCell align=\"center\">{item.ID}</TableCell>\n                  <TableCell align=\"center\">{item.Customer.Customer_name}</TableCell>\n                  <TableCell align=\"center\">{format((new Date(item.Checkin_date)), 'dd MMMM yyyy hh:mm a')}</TableCell>\n                  <TableCell align=\"center\">{format((new Date(item.Checkout_date)), 'dd MMMM yyyy hh:mm a')}</TableCell>\n                  <TableCell align=\"center\">{item.Restroom.Room_number}</TableCell>\n                  <TableCell align=\"center\">{item.Number_customer}</TableCell>\n                  <TableCell align=\"center\">{item.PaymentMethod.Payment_type}</TableCell>\n                  <TableCell align=\"center\">{item.Customer_tel}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default Reservation;","/Users/siri.milk/se-64-reservation/frontend/src/components/Home.tsx",[],"/Users/siri.milk/se-64-reservation/frontend/src/components/Signin.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":7,"column":3,"nodeType":"54","messageId":"55","endLine":7,"endColumn":8},{"ruleId":"52","severity":1,"message":"56","line":12,"column":8,"nodeType":"54","messageId":"55","endLine":12,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":14,"column":8,"nodeType":"54","messageId":"55","endLine":14,"endColumn":11},{"ruleId":"52","severity":1,"message":"58","line":15,"column":8,"nodeType":"54","messageId":"55","endLine":15,"endColumn":18},{"ruleId":"52","severity":1,"message":"59","line":16,"column":8,"nodeType":"54","messageId":"55","endLine":16,"endColumn":15},{"ruleId":"52","severity":1,"message":"60","line":32,"column":8,"nodeType":"54","messageId":"55","endLine":32,"endColumn":19},{"ruleId":"52","severity":1,"message":"61","line":70,"column":10,"nodeType":"54","messageId":"55","endLine":70,"endColumn":15},{"ruleId":"52","severity":1,"message":"62","line":70,"column":17,"nodeType":"54","messageId":"55","endLine":70,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":161,"column":6,"nodeType":"65","endLine":161,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":60,"column":6,"nodeType":"65","endLine":60,"endColumn":8,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'alpha' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Reservation' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCustomers', 'getPaymentMethods', and 'getRestrooms'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'getReservations'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [getCustomers, getPaymentMethods, getRestrooms]",{"range":"77","text":"78"},"Update the dependencies array to be: [getReservations]",{"range":"79","text":"80"},[4662,4664],"[getCustomers, getPaymentMethods, getRestrooms]",[1800,1802],"[getReservations]"]